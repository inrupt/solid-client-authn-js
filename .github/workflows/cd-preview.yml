name: CD-preview

on: [push, workflow_dispatch]

env:
  CI: true
jobs:
  dev-release-npm:
    name: "NPM release under a dev tag"
    runs-on: ubuntu-20.04
    # Dependabot cannot access secrets, so it doesn't have a token to publish to NPM.
    # Since all the other jobs of this workflow depend on this one, skipping it should
    # skip the entire workflow.
    if: ${{ github.actor != 'dependabot[bot]' }}
    outputs:
      version-nr: ${{ steps.determine-npm-version.outputs.version-nr }}
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Prepare for publication to GitHub Packages
        uses: actions/setup-node@v2.3.0
        with:
          node-version: "12.x"
          registry-url: "https://registry.npmjs.org"
      - name: Determine npm tag
        # Remove non-alphanumeric characters
        # See https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
        run: echo "TAG_SLUG=$(echo ${GITHUB_REF#refs/heads/} | tr -cd '[:alnum:]-')" >> $GITHUB_ENV
      - run: npm ci
      - name: Prepare prerelease version
        id: determine-npm-version
        run: |
          git config user.name $GITHUB_ACTOR
          git config user.email gh-actions-${GITHUB_ACTOR}@github.com
          # Unfortunately re-running a job does not change its run ID nor run number.
          # To prevent re-releasing the same version when re-running the CD job,
          # we incorporate a timestamp in the prerelease version:
          TIMESTAMP=$(date --utc +%s)
          # Make sure the prerelease is tagged with the branch name, and that they are sorted by build:
          # Note: we run a Lerna-specific script to update the version (as
          # opposed to running `lerna version ...` or `npm version ...`).
          npm run lerna-version -- prerelease --preid=$TAG_SLUG-$GITHUB_RUN_ID-$GITHUB_RUN_NUMBER-$TIMESTAMP --yes --no-push --exact
          # Read the "version" key from one of our packages to determine the exact version nr
          # the prerelease was published under:
          VERSION_NR=$(cat packages/browser/package.json | npx json version)
          echo "::set-output name=version-nr::$VERSION_NR"
      - run: npm run build
      - run: npm run publish-preview -- --dist-tag "$TAG_SLUG" --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: |
          echo "Package published. To install, run:"
          echo ""
          echo "    npm install @inrupt/solid-client-authn-browser@$TAG_SLUG"
          echo ""
          echo "or"
          echo ""
          echo "    npm install @inrupt/solid-client-authn-node@$TAG_SLUG"
      - name: Waiting for npm CDNs to update...
        run: |
          echo "Giving npm some time to make the newly-published package available…"
          sleep 5m
          echo "Done — hopefully that was enough time for the follow-up jobs to install the just-published package, to verify that everything looks OK."

  verify-imports-node:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16.x, 14.x, 12.x]
    needs: [dev-release-npm]
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-node@v2.3.0
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
      - name: Install the preview release of solid-client-authn-node in the packaging test project
        run: |
          cd .github/workflows/cd-packaging-tests/node
          npm install @inrupt/solid-client-authn-node@$VERSION_NR
        env:
          VERSION_NR: ${{ needs.dev-release-npm.outputs.version-nr }}
      - name: Verify that the package can be imported in Node from a CommonJS module
        run: |
          cd .github/workflows/cd-packaging-tests/node
          node --unhandled-rejections=strict commonjs.cjs
      - name: Verify that the package can be imported in Node from an ES module
        run: |
          cd .github/workflows/cd-packaging-tests/node
          node --unhandled-rejections=strict esmodule.mjs


  verify-imports-parcel:
    runs-on: ubuntu-20.04
    needs: [dev-release-npm]
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: actions/setup-node@v2.3.0
      with:
        node-version: '14.x'
        registry-url: 'https://registry.npmjs.org'
    - name: Verify that the package can be imported in a Parcel project
      run: |
        cd .github/workflows/cd-packaging-tests/bundler-parcel
        npm install @inrupt/solid-client-authn-browser@$VERSION_NR
        npx parcel@1.12.3 build index.ts
      env:
        VERSION_NR: ${{ needs.dev-release-npm.outputs.version-nr }}
    - name: Archive Parcel build artifacts
      uses: actions/upload-artifact@v2.2.4
      continue-on-error: true
      with:
        name: parcel-dist
        path: .github/workflows/cd-packaging-tests/bundler-parcel/dist

  verify-imports-webpack:
    runs-on: ubuntu-20.04
    needs: [dev-release-npm]
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: actions/setup-node@v2.3.0
      with:
        node-version: '14.x'
        registry-url: 'https://registry.npmjs.org'
    - name: Verify that the package can be imported in a Webpack project
      run: |
        cd .github/workflows/cd-packaging-tests/bundler-webpack
        npm install @inrupt/solid-client-authn-browser@$VERSION_NR
        npm install webpack@5 webpack-cli buffer crypto-browserify stream-browserify util
        npx webpack --devtool source-map
      env:
        VERSION_NR: ${{ needs.dev-release-npm.outputs.version-nr }}
    - name: Archive Webpack build artifacts
      uses: actions/upload-artifact@v2.2.4
      continue-on-error: true
      with:
        name: webpack-dist
        path: .github/workflows/cd-packaging-tests/bundler-webpack/dist
