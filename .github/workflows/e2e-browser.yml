name: End-to-end browser tests

on: [push]

env:
  CI: true
jobs:
  test:
    # Running end-to-end tests requires accessing secrets which aren't available to dependabot.
    # https://github.blog/changelog/2021-02-19-github-actions-workflows-triggered-by-dependabot-prs-will-run-with-read-only-permissions/
    if: github.actor != 'dependabot[bot]'
    runs-on: ${{ matrix.os }}
    environment:
      name: ${{ matrix.environment-name }}
    strategy:
      matrix:
        # Available OS's: https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
        os: [ubuntu-20.04]
        # The Node version does not influence how well our tests run in the browser,
        # so we only need to test in one.
        node-version: [16.x]
        # NSS does not support static client registration, which we rely on for testing.
        # FIXME: "ESS Dev-Next" is disabled for now due to errors, should be able to be re-enabled before merge:
        environment-name: ["ESS Production"]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v2.1.7
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-node${{ runner.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      # Installing playwright seems to be fast enough without caching:
      - name: Setup Playwright
        run: npx playwright install-deps chromium firefox webkit
      - run: npm ci
      - run: npm run bootstrap -- --ci
      - run: npm run build
      - name: Prepare browser-based end-to-end tests
        run: |
          cd packages/browser/examples/demoClientApp
          npm install
          cd ../../../../
      - name: Run browser-based end-to-end tests
        run: npm run test:e2e:browser
        env:
          E2E_DEMO_CLIENT_APP_URL: http://localhost:3001
          E2E_TEST_USERNAME: ${{ secrets.E2E_TEST_USERNAME }}
          E2E_TEST_PASSWORD: ${{ secrets.E2E_TEST_PASSWORD }}
          E2E_TEST_POD: ${{ secrets.E2E_TEST_POD }}
          E2E_TEST_IDP: ${{ secrets.E2E_TEST_IDP }}
          E2E_TEST_CLIENT_ID: ${{ secrets.E2E_TEST_CLIENT_ID }}
          E2E_TEST_CLIENT_SECRET: ${{ secrets.E2E_TEST_CLIENT_SECRET }}
          E2E_TEST_ENVIRONMENT: ${{ matrix.environment-name }}
      - name: Archive browser-based end-to-end test failure results, if any
        uses: actions/upload-artifact@v2.3.1
        continue-on-error: true
        if: failure()
        with:
          name: e2e-browser-failures
          path: e2e/browser/test-results
